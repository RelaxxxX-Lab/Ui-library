function window:AddSlider(text, min, max, default, callback)
    self.count = self.count + 1
    callback = callback or function() end
    min = min or 0
    max = max or 100
    default = default or min

    local sliderValue = default

    -- Criação da label do slider
    local label = library:Create("TextLabel", {
        Text = text,
        Size = UDim2.new(1, -10, 0, 20),
        BackgroundTransparency = 1,
        TextColor3 = Color3.fromRGB(255, 255, 255),
        TextXAlignment = Enum.TextXAlignment.Left,
        LayoutOrder = self.Count,
        TextSize = 14,
        Font = Enum.Font.FredokaOne,
        Parent = self.container
    })

    -- Criação do frame do slider
    local sliderFrame = library:Create("Frame", {
        Size = UDim2.new(1, -10, 0, 20),
        BackgroundTransparency = 0.75,
        BackgroundColor3 = Color3.fromRGB(40, 40, 40),
        BorderSizePixel = 0,
        LayoutOrder = self.Count,
        Parent = self.container
    })

    -- Indicador de valor do slider
    local valueLabel = library:Create("TextLabel", {
        Text = tostring(default),
        Size = UDim2.new(0, 40, 1, 0),
        Position = UDim2.new(1, -40, 0, 0),
        BackgroundTransparency = 1,
        TextColor3 = Color3.fromRGB(255, 255, 255),
        TextXAlignment = Enum.TextXAlignment.Center,
        TextSize = 14,
        Font = Enum.Font.FredokaOne,
        Parent = sliderFrame
    })

    -- Barra do slider
    local sliderBar = library:Create("Frame", {
        Size = UDim2.new(0.8, 0, 0.5, 0),
        Position = UDim2.new(0, 5, 0.5, -5),
        BackgroundColor3 = Color3.fromRGB(30, 30, 30),
        BorderSizePixel = 0,
        Parent = sliderFrame
    })

    -- Indicador do slider
    local sliderButton = library:Create("TextButton", {
        Size = UDim2.new(0, 10, 1, 0),
        BackgroundColor3 = Color3.fromRGB(0, 255, 140),
        BorderSizePixel = 0,
        Text = "",
        Parent = sliderBar
    })

    local dragging = false

    sliderButton.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            dragging = true
        end
    end)

    sliderButton.InputEnded:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            dragging = false
        end
    end)

    game:GetService("UserInputService").InputChanged:Connect(function(input)
        if dragging and input.UserInputType == Enum.UserInputType.MouseMovement then
            local barAbsPos = sliderBar.AbsolutePosition
            local barAbsSize = sliderBar.AbsoluteSize
            local mousePos = game:GetService("UserInputService"):GetMouseLocation().X
            local percent = math.clamp((mousePos - barAbsPos.X) / barAbsSize.X, 0, 1)
            sliderValue = math.floor(min + (max - min) * percent)

            sliderButton.Position = UDim2.new(percent, -5, 0, 0)
            valueLabel.Text = tostring(sliderValue)
            callback(sliderValue)
        end
    end)

    self:Resize()
    return sliderFrame
end
